{
  "name": "fix-augment-windsurf",
  "displayName": "Fix Augment Windsurf",
  "description": "Enhanced Augment extension with improved formatting and features by MrXploisLite",
  "version": "1.1.1",
  "publisher": "WindsurfCustom",
  "author": {
    "name": "MrXploisLite"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/MrXploisLite/fix-augment"
  },
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "fix-augment-windsurf.enhanceInput",
        "title": "Augment: Enhance Input"
      },
      {
        "command": "fix-augment-windsurf.formatOutput",
        "title": "Augment: Format Output"
      },
      {
        "command": "fix-augment-windsurf.toggleEnhancement",
        "title": "Augment: Toggle Enhancement"
      },
      {
        "command": "fix-augment-windsurf.smartChunk",
        "title": "Augment: Smart Chunk Large Input"
      },
      {
        "command": "fix-augment-windsurf.applyTheme",
        "title": "Augment: Apply Syntax Theme"
      },
      {
        "command": "fix-augment-windsurf.optimizeCodeBlocks",
        "title": "Augment: Optimize Code Blocks"
      },
      {
        "command": "fix-augment-windsurf.setApiKey",
        "title": "Augment: Set API Key"
      },
      {
        "command": "fix-augment-windsurf.toggleLimitBypass",
        "title": "Augment: Toggle Limit Bypass"
      },
      {
        "command": "fix-augment-windsurf.resetUsageCounter",
        "title": "Augment: Reset Usage Counter"
      }
    ],
    "configuration": {
      "title": "Fix Augment Windsurf",
      "properties": {
        "fixAugmentWindsurf.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable or disable the Fix Augment extension"
        },
        "fixAugmentWindsurf.maxInputSize": {
          "type": "number",
          "default": 10000,
          "description": "Maximum size of input to process at once (in characters)"
        },
        "fixAugmentWindsurf.outputFormat": {
          "type": "string",
          "enum": ["default", "enhanced", "markdown", "html"],
          "default": "enhanced",
          "description": "Format to use for Augment outputs"
        },
        "fixAugmentWindsurf.autoFormatOutput": {
          "type": "boolean",
          "default": true,
          "description": "Automatically format Augment outputs as they appear"
        },
        "fixAugmentWindsurf.syntaxTheme": {
          "type": "string",
          "enum": ["default", "github", "monokai", "dracula", "nord"],
          "default": "github",
          "description": "Syntax highlighting theme for code blocks"
        },
        "fixAugmentWindsurf.smartChunking": {
          "type": "boolean",
          "default": true,
          "description": "Use smart chunking to preserve context when splitting large inputs"
        },
        "fixAugmentWindsurf.preserveCodeBlocks": {
          "type": "boolean",
          "default": true,
          "description": "Keep code blocks intact when chunking large inputs"
        },
        "fixAugmentWindsurf.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Augment (for future use - Augment currently doesn't require an API key)"
        },
        "fixAugmentWindsurf.bypassLimits": {
          "type": "boolean",
          "default": false,
          "description": "Enable features to bypass Augment usage limits (for future use - Augment currently has unlimited usage)"
        },
        "fixAugmentWindsurf.requestDelay": {
          "type": "number",
          "default": 500,
          "description": "Delay between requests in milliseconds (for future use - to avoid potential rate limiting)"
        },
        "fixAugmentWindsurf.maxRequestsPerSession": {
          "type": "number",
          "default": 50,
          "description": "Maximum number of requests per session before auto-reset (for future use - Augment currently has no request limits)"
        }
      }
    },
    "menus": {
      "editor/context": [
        {
          "command": "fix-augment-windsurf.enhanceInput",
          "when": "editorHasSelection",
          "group": "augment@1"
        },
        {
          "command": "fix-augment-windsurf.formatOutput",
          "when": "editorHasSelection",
          "group": "augment@2"
        },
        {
          "command": "fix-augment-windsurf.smartChunk",
          "when": "editorHasSelection",
          "group": "augment@3"
        },
        {
          "command": "fix-augment-windsurf.optimizeCodeBlocks",
          "when": "editorHasSelection",
          "group": "augment@4"
        }
      ],
      "commandPalette": [
        {
          "command": "fix-augment-windsurf.enhanceInput",
          "when": "editorHasSelection"
        },
        {
          "command": "fix-augment-windsurf.formatOutput",
          "when": "editorHasSelection"
        },
        {
          "command": "fix-augment-windsurf.smartChunk",
          "when": "editorHasSelection"
        },
        {
          "command": "fix-augment-windsurf.optimizeCodeBlocks",
          "when": "editorHasSelection"
        },
        {
          "command": "fix-augment-windsurf.applyTheme"
        },
        {
          "command": "fix-augment-windsurf.toggleEnhancement"
        },
        {
          "command": "fix-augment-windsurf.setApiKey"
        },
        {
          "command": "fix-augment-windsurf.toggleLimitBypass"
        },
        {
          "command": "fix-augment-windsurf.resetUsageCounter"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "marked": "^12.0.0",
    "highlight.js": "^11.9.0"
  },
  "devDependencies": {
    "@types/vscode": "^1.97.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "eslint": "^9.23.0",
    "typescript": "^5.8.2",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1"
  }
}
